// Source code is decompiled from a .class file using FernFlower decompiler.
package br.calebe.ticketmachine.core;
import br.calebe.ticketmachine.exception.PapelMoedaInvalidaException;
import br.calebe.ticketmachine.exception.SaldoInsuficienteException;
import java.util.Iterator;

public class TicketMachine {
   protected int valor;
   protected int saldo;
   protected int[] papelMoeda = new int[]{2, 5, 10, 20, 50, 100};

   public TicketMachine(int valor) {
      this.valor = valor;
      this.saldo = 0;
   }

   public void inserir(int quantia) throws PapelMoedaInvalidaException {
      boolean achou = false;

      for (int i = 0; i < this.papelMoeda.length && !achou; i++) {
         if (this.papelMoeda[i] == quantia) {
            achou = true;
         }
      }

      if (!achou) {
         throw new PapelMoedaInvalidaException();
      } else {
         this.saldo += quantia;
      }
   }

   public int getSaldo() {
      return this.saldo;
   }

   public Iterator<PapelMoeda> getTroco() {
      // Retornar um iterator de Troco correto usando o saldo atual
      Troco troco = new Troco(saldo);
      saldo = 0; // Zerar saldo após gerar o troco
      return troco.getIterator();
   }

   public String imprimir() throws SaldoInsuficienteException {
      if (this.saldo < this.valor) {
         throw new SaldoInsuficienteException();
      } else {
         this.saldo -= this.valor; // Deduz o valor do bilhete do saldo
         String result = "*****************\n";
         result += "*** R$ " + this.valor + ",00 ****\n"; // Exibir valor do bilhete, não o saldo
         result += "*****************\n";
         return result;
      }
   }
}